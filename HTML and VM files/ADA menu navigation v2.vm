<script>
    var li = jQuery('#DDmenu li');
    var liSelected;
    
    var inputTypes = ['input', 'select', 'button', 'textarea'];

    ## note - keydown function is captured immediately as a part of the keyup function appended at the end of keyup function     
    jQuery(window).keyup(function(e){        
    
        ## console.log(document.activeElement);            
        ## console.log($(":focus"));
        ## console.log($(":focus").attr('href'));     
        
        var focusedElement = document.activeElement;
        
        ## console.log(liSelected);
        ## console.log(focusedElement);

        ## original location for keydown/keyup        
        
        ## fires if Enter key is pressed and if focused element on the page is not an input field defined in inputTypes

        if ( ((e.which == 13) && (focusedElement && inputTypes.indexOf(focusedElement.tagName.toLowerCase()) == -1)) ){ // enter
            
            ## console.log("enter key" );

            menuBehaviorToggle(focusedElement,true);
        }  
        
         ## fires if Esc key is pressed.          
         if (e.which == 27){             
            resetAllTheThings();
         }

        ## fires if Tab key is pressed 
        if (e.which==9){
            
            if((focusedElement.text=="FAQs") || (focusedElement.title=="State Farm Logo")){
                resetAllTheThings();
                jQuery(focusedElement).focus(); 
            }
        }    
         
        ## checks to see if drop down menu has been opened, if so, then allow tracking of keyup/keydown events. 
        ## note activeLi is a class used to help keep track of which LI element is currently selected. There is no CSS for this class. 

        if(jQuery(".productCategories").hasClass("adaNav")){
            
            ## console.log("menu is open");

            if(e.which === 40){
                
                ## console.log("in keydown function");                

                ## prevents scrolling of page on keypress events 
                
                e.preventDefault();
                
                if(liSelected){
                
                    ## removes classes and focus from currently selected object                     
                    liSelected.removeClass('activeLi');
                    jQuery(liSelected).find("a").removeClass("adaNavLink");                                    
                    jQuery(liSelected).find("a").removeAttr("tabindex");
                    
                    next = liSelected.next();

                    ## add classes to selected object 
                    if(next.length > 0){
                        liSelected = next.addClass('activeLi');                        
                        jQuery(liSelected).find("a").addClass("adaNavLink");
                    }else{
                        liSelected = li.eq(0).addClass('activeLi');    
                        jQuery(liSelected).find("a").addClass("adaNavLink");
                    }
                }else{
                    liSelected = li.eq(0).addClass('activeLi');                    
                    jQuery(liSelected).find("a").addClass("adaNavLink");
                }             
                
                ## gives focus to selected link 
                jQuery(liSelected).find("a").attr("tabindex",-1).focus();;              

            }else if(e.which === 38){

                ## console.log("in keyup function");

                ## prevents scrolling of page on keypress events 
                e.preventDefault();
                
                if(liSelected){

                    ## removes classes and focus from currently selected object 
                    liSelected.removeClass('activeLi');
                    jQuery(liSelected).find("a").removeClass("adaNavLink");                    
                    jQuery(liSelected).find("a").removeAttr("tabindex");
                    
                    next = liSelected.prev();

                    ## add classes to selected object 
                    if(next.length > 0){
                        liSelected = next.addClass('activeLi');
                        jQuery(liSelected).find("a").addClass("adaNavLink");
                    }else{
                        console.log(liSelected);
                        
                        ## original lines of code to cycle through menu when arrowing up and hitting the first element. commented out to collapse the menu
                        ## liSelected = li.last().addClass('activeLi');                        
                        ## jQuery(liSelected).find("a").addClass("adaNavLink");
                        
                        resetAllTheThings();
                        jQuery('.productCategories').focus(); 
                    }
                }else{
                    liSelected = li.last().addClass('activeLi');
                    jQuery(liSelected).find("a").addClass("adaNavLink");
                }
                
                ## gives focus to selected link 
                jQuery(liSelected).find("a").attr("tabindex",-1).focus();;               
            }

        }
        else{
            ## console.log("menu is closed");
        }
         
    }).keydown(function(e){
        
        ## error checking to see if menu is already open by checking for adaNav class. if so, prevents default keydown press defaults EXCEPT for Tab. Allows tab to work as normal. 
        if (jQuery(".productCategories").hasClass("adaNav")){
            ## console.log("already has the addNav class");
            if(e.which!=9){
                e.preventDefault();
            }    
        }
        else if( ((e.which === 40) && (jQuery('.productCategories').is(":focus"))) || ((e.which === 40) && (jQuery(".productCategories").hasClass("adaNav"))) ){

            ## console.log("product categories has the focus");
            ## console.log("in keydown function AFTER keyup");
            
            e.preventDefault();                  
            menuBehaviorToggle(document.activeElement,false);               
        }
    });;    
    
    ## captures mouse click to determine when to call resetAllTheThings
    document.onclick = mouseClickNavMenu;

    function menuBehaviorToggle(focusedElement,anchorCheck){
        if (jQuery('#DDmenu').is(":focus")) {

            ## console.log("showing focused element");
            ## console.log(focusedElement);                
            ## console.log(jQuery(focusedElement).html());
          
            ## removes simulated hover state and focus for drop down navigation 

            jQuery('.productCategories').removeClass("adaNav");                                          
            jQuery('#DDmenu').removeAttr( 'style' );
            jQuery('#DDmenu').blur();                
        }
        else{
            
            ## console.log("showing focused element and not in DDmenu");
            ## console.log(focusedElement);                    
            ## console.log(jQuery(focusedElement).html());
            
            ## added check to execute only in keyup function. anchorCheck true means menuBehaviorToggle called from keyup
            if (anchorCheck==true){
                ## detects if focus is on anchor tag within the menu. if so, then will open that link. 

                if(focusedElement.tagName=="A"){
                    ## console.log("it is a link");
                    ## console.log(focusedElement.href);
                    
                    window.open(focusedElement.href,"_self");
                }
            }

            ## adds simulated hover state and focus for drop down navigation 

            jQuery('.productCategories').addClass("adaNav");
            jQuery('#DDmenu').css("display","block"); 
            jQuery("#DDmenu").attr("tabindex",-1).focus();
        }
    }
    
    function mouseClickNavMenu(){
        
        ## console.log("hey you clicked the mouse");        
        
        var newfocusedElement = document.activeElement;
    
        if (newfocusedElement && inputTypes.indexOf(newfocusedElement.tagName.toLowerCase()) !== -1) {
            ## console.log("This is an input");
        }
        else{
            ## console.log("This is not an input");            

            resetAllTheThings();
        }        
    }
    
    ## function resetAllTheThings strips out all simulated hover states and tracked elements when Esc key or mouseClick is detected 

    function resetAllTheThings(){
        jQuery('#DDmenu').removeAttr( 'style' );
        jQuery('#DDmenu').blur();              
        jQuery('.productCategories').removeClass("adaNav");
        jQuery('.activeLi').removeClass('activeLi');
        jQuery('.adaNavLink').removeClass('adaNavLink');                                           
        jQuery(liSelected).find("a").removeAttr("tabindex");
            
        ## resets tracking of location of selected element in drop down navigation         

        next = liSelected.eq(0);   
        liSelected = undefined;              
  
        document.activeElement.blur();         
    }
</script>